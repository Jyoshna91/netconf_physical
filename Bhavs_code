from pyats.topology import Device

# Define connection parameters
device_params = {
    'name': 'n9k1',
    'connections': {
        'netconf': {
            'class': 'yang.connector.Netconf',
            'ip': '10.133.35.148',  # Replace with the actual IP address of your device
            'port': 22,  # NETCONF port
            'username': 'admin',  # NETCONF username
            'password': 'tcs123',  # NETCONF password
        }
    }
}

# Create a Device instance
device = Device(**device_params)

# Connect to the device
device.connect(alias='nc', via='netconf')
if device.nc.connected:
    print("NETCONF Connected")

    # Define the NETCONF request for entering configuration mode
    config_mode_request = """
    <?xml version="1.0" encoding="UTF-8"?>
    <nf:rpc xmlns:nf="urn:ietf:params:xml:ns:netconf:base:1.0"
            xmlns:nxos="http://www.cisco.com/nxos:1.0" message-id="104">
      <nxos:exec-command>
        <nxos:cmd>configure terminal</nxos:cmd>
      </nxos:exec-command>
    </nf:rpc>
    """

    # Define the NETCONF request for configuring RIP
    configure_rip_request = """
    <?xml version="1.0" encoding="UTF-8"?>
    <nf:rpc xmlns:nf="urn:ietf:params:xml:ns:netconf:base:1.0"
            xmlns:nxos="http://www.cisco.com/nxos:1.0" message-id="105">
      <nxos:exec-command>
        <nxos:cmd>router rip sample</nxos:cmd>
      </nxos:exec-command>
    </nf:rpc>
    """

    # Define the NETCONF request for setting the address family
    address_family_request = """
    <?xml version="1.0" encoding="UTF-8"?>
    <nf:rpc xmlns:nf="urn:ietf:params:xml:ns:netconf:base:1.0"
            xmlns:nxos="http://www.cisco.com/nxos:1.0" message-id="106">
      <nxos:exec-command>
        <nxos:cmd>address-family ipv4 unicast</nxos:cmd>
      </nxos:exec-command>
    </nf:rpc>
    """

    # Define the NETCONF request for adding the network
    add_network_request = """
    <?xml version="1.0" encoding="UTF-8"?>
    <nf:rpc xmlns:nf="urn:ietf:params:xml:ns:netconf:base:1.0"
            xmlns:nxos="http://www.cisco.com/nxos:1.0" message-id="107">
      <nxos:exec-command>
        <nxos:cmd>network 192.168.1.0/24</nxos:cmd>
      </nxos:exec-command>
    </nf:rpc>
    """

    # List of NETCONF requests
    netconf_requests = [
        config_mode_request,
        configure_rip_request,
        address_family_request,
        add_network_request
    ]

    # Send the NETCONF requests and get the responses
    try:
        for request in netconf_requests:
            reply = device.nc.request(request)
            print("Response:")
            print(reply)
    except Exception as e:
        print(f"Error: {e}")

    # Disconnect from the device
    device.nc.disconnect()
    print("NETCONF Disconnected")
else:
    print("NETCONF Connection Failed")
