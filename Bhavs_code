from pyats.topology import Device

# Define connection parameters
device_params = {
    'name': 'n9k1',
    'connections': {
        'netconf': {
            'class': 'yang.connector.Netconf',
            'ip': '10.133.35.148',  # Replace with the actual IP address of your device
            'port': 22,  # NETCONF port
            'username': 'admin',  # NETCONF username
            'password': 'tcs123',  # NETCONF password
        }
    }
}

# Create a Device instance
device = Device(**device_params)

# Connect to the device
device.connect(alias='nc', via='netconf')
if device.nc.connected:
    print("NETCONF Connected")

    # Define the NETCONF request for configuring OSPF
    netconf_request = """
    <rpc message-id="101" xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
      <edit-config>
        <target>
          <running/>
        </target>
        <config>
          <native xmlns="http://cisco.com/ns/yang/cisco-nx-os-native">
            <router>
              <ospf xmlns="http://openconfig.net/yang/ospf-deviations">
                <id>100</id>
                <router-id>1.1.1.1</router-id>
                <network>
                  <ip>10.1.1.0</ip>
                  <mask>0.0.0.3</mask>
                  <area>0</area>
                </network>
              </ospf>
            </router>
          </native>
        </config>
      </edit-config>
    </rpc>
    """

    # Send the NETCONF request and get the response
    try:
        reply = device.nc.request(netconf_request)
        print("Response:")
        print(reply)
    except Exception as e:
        print(f"Error: {e}")

    # Disconnect from the device
    device.nc.disconnect()
    print("NETCONF Disconnected")
else:
    print("NETCONF Connection Failed")
