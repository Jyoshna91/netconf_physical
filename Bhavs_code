import paramiko

# Define connection parameters
host = "2.3.4.5"
port = 830
username = "admin"
password = "admin"

# Define the XML command request
command_request = """
<?xml version="1.0" encoding="UTF-8"?>
<rpc message-id="110"
     xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
     xmlns:nxos="http://www.cisco.com/nxos:1.0">
  <nxos:exec-command>
    <nxos:cmd>show ip interface brief</nxos:cmd>
  </nxos:exec-command>
</rpc>
"""

# Function to connect and execute command
def execute_command():
    # Create an SSH client
    ssh_client = paramiko.SSHClient()
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    
    try:
        # Connect to the device
        ssh_client.connect(hostname=host, port=port, username=username, password=password, look_for_keys=False, allow_agent=False)
        print("SSH Connected")

        # Open a NETCONF session
        netconf_channel = ssh_client.get_transport().open_session()
        netconf_channel.set_name("netconf")
        netconf_channel.invoke_subsystem("netconf")

        # Send the XML command request
        netconf_channel.send(command_request)
        print("Command Sent")

        # Receive and print the response
        while True:
            if netconf_channel.recv_ready():
                response = netconf_channel.recv(4096).decode('utf-8')
                print("Response:")
                print(response)
                break

    except Exception as e:
        print(f"Error: {e}")
    finally:
        # Close the NETCONF session and SSH connection
        netconf_channel.close()
        ssh_client.close()
        print("SSH Disconnected")

if __name__ == "__main__":
    execute_command()
