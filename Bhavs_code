from yang.connector import Netconf

# Define the NETCONF XML request for "show ip interface brief"
netconf_request = """
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="101">
  <exec-command xmlns="http://www.cisco.com/nxos:1.0">
    <cmd>show ip interface brief</cmd>
  </exec-command>
</rpc>
"""

# Define the device details from the testbed file
device_details = {
    "class": "yang.connector.Netconf",
    "ip": "2.3.4.5",  # Replace with the actual IP address of the device
    "port": 830,  # NETCONF port
    "username": "admin",  # NETCONF username
    "password": "admin",  # NETCONF password
}

def execute_netconf_command(device_details, netconf_request):
    try:
        # Initialize the Netconf session
        device = Netconf(**device_details, drive="async")
        print("NETCONF Connected")

        # Send the NETCONF request and get the response
        response = device.request(netconf_request)
        print("Response:")
        print(response)

    except Exception as e:
        print(f"Error: {e}")

    finally:
        # Disconnect from the device
        device.disconnect()
        print("NETCONF Disconnected")

if __name__ == "__main__":
    execute_netconf_command(device_details, netconf_request)
