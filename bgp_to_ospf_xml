<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="101">
<edit-config>
<target>
<running/>
</target>
<config>
<network-instances xmlns="http://openconfig.net/yang/network-instance">
<network-instance>
<name>default</name>
<protocols>
<protocol> <identifier>BGP</identifier>
<name>bgp</name>
<bgp xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0" nc:operation="delete">
<global>
<config>
<as>100</as>
</config>
</global>
</bgp>
</protocol>
</protocols>
</network-instance>
</network-instances>
</config>
</edit-config>
</rpc>



from ncclient import manager
from ncclient.xml_ import to_ele

# Define connection parameters
host = "10.133.35.148"
username = "admin"
password = "tcs123"

# Define the XML filter with the configuration commands to be executed
xml_filter = """
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" message-id="101">
  <edit-config>
    <target>
      <running/>
    </target>
    <config>
      <network-instances xmlns="http://openconfig.net/yang/network-instance">
        <network-instance>
          <name>default</name>
          <protocols>
            <protocol>
              <identifier>OSPF</identifier>
              <name>ospf</name>
              <ospf xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0">
                <global>
                  <config>
                    <router-id>1.1.1.1</router-id>
                    <as>100</as>
                  </config>
                </global>
              </ospf>
            </protocol>
          </protocols>
        </network-instance>
      </network-instances>
    </config>
  </edit-config>
</rpc>
"""

def execute_command():
    with manager.connect(host=host, port=830, username=username, password=password, hostkey_verify=False) as m:
        print("NETCONF Connected")

        # Convert the XML string to an element
        rpc = to_ele(xml_filter)

        # Send the RPC request
        try:
            res = m.dispatch(rpc)
            # Print the response
            print("Response:")
            print(res.xml)
        except Exception as e:
            print("Error: {}".format(e))

if __name__ == "__main__":
    execute_command()
